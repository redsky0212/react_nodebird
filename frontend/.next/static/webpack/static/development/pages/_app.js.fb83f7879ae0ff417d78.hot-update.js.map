{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.fb83f7879ae0ff417d78.hot-update.js","sources":["webpack:///./components/LoginForm.js","webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Input, Button, Form } from 'antd';\r\nimport { useInput } from '../pages/signup';\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    return (\r\n        <Form>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input name=\"user-password\" type=\"password\" required />\r\n            </div>\r\n            <div>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={true}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useCallback } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n// custom hook 만들기 예제(같은 기능을 하는 hook을 합쳐서 custom으로 만들어서 사용)\r\n// 여기서는 id, nick, password 가 같으므로 custom hook을 사용한다.\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = (e) => {\r\n        setter(e.target.value);\r\n    }\r\n    return [value, handler];\r\n}\r\n\r\nconst Signup = () => {\r\n    // hooks방식의 state 설정.(id, nick, password는 custom hook을 사용)\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);  // password가 틀린경우 에러체크\r\n    const [termError, setTermError] = useState(false);          // 약관동의 안한경우 에러체크\r\n\r\n    \r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if( password !== passwordCheck ){\r\n            return setPasswordError(true);\r\n        }\r\n        if( !term ){\r\n            return setTermError(true);\r\n        }\r\n    }, [password, passwordCheck, term]);\r\n\r\n    const onChangePasswordChk = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-pass\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass-chk\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input name=\"user-pass-chk\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\r\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치 해야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>동의합니다.</Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관에 동의 하셔야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}