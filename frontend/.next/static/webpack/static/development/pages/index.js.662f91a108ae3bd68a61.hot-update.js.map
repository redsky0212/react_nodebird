{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.662f91a108ae3bd68a61.hot-update.js","sources":["webpack:///./components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport {Card, Icon, Button, Avatar, Form, List} from 'antd';\r\nimport PropsTypes from 'prop-types';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport post from '../reducers/post';\r\n\r\nconst PostCard = ({v}) => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText, setCommentText] = useState('');\r\n    const {me} = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitComment = useCallback((e) => {\r\n\r\n    },[]);\r\n\r\n    const onToggleComment = useCallback((e) => {\r\n        setCommentFormOpened(prev => !prev);\r\n    }, []);\r\n\r\n    const onChangeCommentText = useCallback((e) => {\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n        <Card\r\n            cover={v.img && <img alt=\"example\" src={v.img} />}\r\n            actions={[\r\n                <Icon type=\"retweet\" key=\"retweet\" />,\r\n                <Icon type=\"heart\" key=\"heart\" />,\r\n                <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\r\n                <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{v.User.nickname[0]}</Avatar>}\r\n                title={v.User.nickname}\r\n                description={v.content}\r\n            />\r\n        </Card>\r\n        {commentFormOpened && (\r\n            <>\r\n                <Form onSubmit={onSubmitComment}>\r\n                    <Form.Item>\r\n                        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                    </Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n                </Form>\r\n                <List\r\n                    header={`${v.Comments ? v.Comments.length : 0} 댓글`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={v.Comments || []}\r\n                    renderItem={item => (\r\n                        <li>\r\n                            <Comment \r\n                                author={item.User.nickname} \r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content={item.content}\r\n                                datetime={item.createdAt} />\r\n                        </li>\r\n                    )}\r\n                >\r\n                </List>\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nPostCard.propsTypes = {\r\n    v: PropsTypes.shape({\r\n        User: PropsTypes.object,\r\n        content: PropsTypes.string,\r\n        img: PropsTypes.string,\r\n        createdAt: PropsTypes.object\r\n    })\r\n};\r\n\r\nexport default PostCard;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;;;;A","sourceRoot":""}