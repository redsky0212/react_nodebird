{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f2dde4f5ba230e8a1470.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Link from 'next/link'; \r\nimport { Form, Input, Button, Card, Icon, Avatar } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { loginAction, logoutAction } from '../reducers/user';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst dummy = {\r\n    isLoggedIn: true,\r\n    imagePaths: [],\r\n    mainPosts:[{\r\n        User:{\r\n            id:1,\r\n            nickname:'redsky',\r\n\r\n        },\r\n        content:'첫 개시글',\r\n        img: 'https://scontent-icn1-1.xx.fbcdn.net/v/t1.0-0/s180x540/10268581_10152716011096729_8785818270101685508_n.png?_nc_cat=100&_nc_oc=AQl7bI6bkPHjH0INBH2e6HOLhUmpqZ_ciWFvDliwWlT1KGx3g2meKs9ks3rT0PYVY5E&_nc_ht=scontent-icn1-1.xx&oh=56e3b26a95d1ff62e1da7b3e8c1b2354&oe=5E246E60',\r\n    }],\r\n};\r\n\r\nconst Home = () => {\r\n\r\n    // redux의 hook(useDispatch)을 이용하여 사용.\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loginAction);\r\n    }, []);\r\n    // redux의 state를 가져와 쓰는 방법\r\n    const {isLoggedIn, user} = useSelector(state=>state.user);\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedIn ? <div>로그인 했습니다: {user.nickname}</div>:<div>로그아웃 했습니다.</div>}\r\n            { dummy.isLoggedIn && <PostForm /> }\r\n            {\r\n                dummy.mainPosts.map((v, i) => {\r\n                    return (\r\n                        <PostCard key={+v.createdAt} v={v} />\r\n                    );\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAPA;AAHA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AARA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;;;;A","sourceRoot":""}