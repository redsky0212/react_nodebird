{"version":3,"file":"static/webpack/static\\development\\pages\\profile.js.f0298e4b9c6829a9efd0.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, List, Card, Icon } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport {\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const { followingList, followerList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    const onUnfollow = useCallback(userId => () => {\r\n        dispatch({\r\n            type: UNFOLLOW_USER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    const onRemoveFollower = useCallback(userId => () => {\r\n        dispatch({\r\n            type: REMOVE_FOLLOWER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    const loadMoreFollowings = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n            offset: followingList.length,\r\n        });\r\n    }, [followingList.length]);\r\n\r\n    const loadMoreFollowers = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n            offset: followerList.length,\r\n        });\r\n    }, [followerList.length]);\r\n\r\n    return (\r\n        <div>\r\n            <NicknameEditForm />\r\n            <List\r\n                style={{ marginBottom: '20px' }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로잉 목록</div>}\r\n                loadMore={hasMoreFollowing && <Button style={{ width: '100%' }} onClick={loadMoreFollowings}>더 보기</Button>}\r\n                bordered\r\n                dataSource={followingList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: '20px' }}>\r\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <List\r\n                style={{ marginBottom: '20px' }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로워 목록</div>}\r\n                loadMore={hasMoreFollower && <Button style={{ width: '100%' }} onClick={loadMoreFollowers}>더 보기</Button>}\r\n                bordered\r\n                dataSource={followerList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: '20px' }}>\r\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <div>\r\n                {mainPosts.map(c => (\r\n                    <PostCard key={+c.createdAt} post={c} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.getInitialProps = async (context) => {\r\n    const state = context.store.getState();\r\n    // 이 직전에 LOAD_USERS_REQUEST\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWERS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWINGS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n\r\n    // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\r\n};\r\n\r\nexport default Profile;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AARA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AARA;AAiBA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}