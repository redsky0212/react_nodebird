{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {// 서버요청 부분\n  // axios처리\n}\n\nfunction* addPost() {\n  try {\n    //yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {// 서버요청 부분\n  // axios처리\n}\n\nfunction* addComment() {\n  try {\n    //yield call(addCommentAPI);\n    yield delay(2000);\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\sagas\\post.js"],"names":["all","fork","takeLatest","call","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostAPI","addPost","type","e","console","error","watchAddPost","addCommentAPI","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddComment","ADD_COMMENT_REQUEST","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,QAEO,kBAFP;;AAKA,SAASC,UAAT,GAAsB,CAClB;AACA;AACH;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AAAM;AACZO,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMR,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAEH,gBADA;AAENM,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUG,YAAV,GAAyB;AACrB,QAAMb,UAAU,CAACI,gBAAD,EAAmBI,OAAnB,CAAhB;AACH;;AAED,SAASM,aAAT,GAAyB,CACrB;AACA;AACH;;AAED,UAAUC,UAAV,GAAuB;AACnB,MAAI;AACA;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AAAM;AACZO,MAAAA,IAAI,EAAEO;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAON,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMR,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAEQ,mBADA;AAENL,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,eAAV,GAA4B;AACxB,QAAMlB,UAAU,CAACmB,mBAAD,EAAsBJ,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACc,YAAD,CADE,EAENd,IAAI,CAACmB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\r\nimport {\r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n} from '../reducers/post';\r\n\r\n\r\nfunction addPostAPI() {\r\n    // 서버요청 부분\r\n    // axios처리\r\n}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        //yield call(addPostAPI);\r\n        yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type: ADD_POST_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI() {\r\n    // 서버요청 부분\r\n    // axios처리\r\n}\r\n\r\nfunction* addComment() {\r\n    try {\r\n        //yield call(addCommentAPI);\r\n        yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type: ADD_COMMENT_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}