{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  // 서버요청 부분\n  // axios처리\n  return axios.post('api/post', postData, {\n    withCredentials: true // 다른도메인 서버와 쿠키를 주고받기위한 셋팅\n\n  });\n}\n\nfunction* addPost() {\n  try {\n    yield call(addPostAPI); //yield delay(2000);\n\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {// 서버요청 부분\n  // axios처리\n}\n\nfunction* addComment(action) {\n  try {\n    //yield call(addCommentAPI);\n    yield delay(2000);\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\sagas\\post.js"],"names":["all","fork","takeLatest","call","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","postData","post","withCredentials","addPost","type","e","console","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE8CC,mBAF9C,QAGO,kBAHP;;AAMA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B;AACA;AACA,SAAOR,KAAK,CAACS,IAAN,CAAW,UAAX,EAAuBD,QAAvB,EAAiC;AACpCE,IAAAA,eAAe,EAAE,IADmB,CACZ;;AADY,GAAjC,CAAP;AAGH;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMd,IAAI,CAACU,UAAD,CAAV,CADA,CAEA;;AACA,UAAMT,GAAG,CAAC;AAAM;AACZc,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOW,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAET,gBADA;AAENY,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUG,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACK,gBAAD,EAAmBU,OAAnB,CAAhB;AACH;;AAED,SAASM,aAAT,GAAyB,CACrB;AACA;AACH;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA;AACA,UAAMpB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AAAM;AACZc,MAAAA,IAAI,EAAEP,mBADA;AAENe,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFA,KAAD,CAAT;AAMH,GATD,CASE,OAAOR,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEN,mBADA;AAENS,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,eAAV,GAA4B;AACxB,QAAM1B,UAAU,CAACQ,mBAAD,EAAsBc,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACqB,YAAD,CADE,EAENrB,IAAI,CAAC2B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\n\r\nfunction addPostAPI(postData) {\r\n    // 서버요청 부분\r\n    // axios처리\r\n    return axios.post('api/post', postData, {\r\n        withCredentials: true,  // 다른도메인 서버와 쿠키를 주고받기위한 셋팅\r\n    });\r\n}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        yield call(addPostAPI);\r\n        //yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type: ADD_POST_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI() {\r\n    // 서버요청 부분\r\n    // axios처리\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        //yield call(addCommentAPI);\r\n        yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId\r\n            }\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}