{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nconst dummyUser = {\n  nickname: 'redsky',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n}; // action\n\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP'; // 동적데이터 처리는 함수로 처리\n\nexport const loginAction = data => {\n  return {\n    type: LOG_IN,\n    data: data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport const signupAction = {\n  type: SIGN_UP,\n  data: {}\n}; // reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","LOG_IN","LOG_OUT","SIGN_UP","loginAction","data","type","logoutAction","signupAction","reducer","state","action"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,QADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEL,MADH;AAEHI,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAEJ;AADkB,CAArB;AAIP,OAAO,MAAMM,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEH,OADkB;AAExBE,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAOP;;AACA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAACZ,YAAP,EAAqBa,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKL,MAAL;AAAa;AACT,iCACOS,KADP;AAEIX,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEP;AAHV;AAKH;;AACD,SAAKS,OAAL;AAAc;AACV,iCACOQ,KADP;AAEIX,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAC;AAHT;AAKH;;AACD,SAAKG,OAAL;AAAc;AACV,iCACOO,KADP;AAGH;;AACD;AAAS;AACL,iCACOA,KADP;AAGH;AAxBL;AA0BH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname: 'redsky',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n};\r\n\r\n// action\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const SIGN_UP = 'SIGN_UP';\r\n\r\n// 동적데이터 처리는 함수로 처리\r\nexport const loginAction = (data) => {\r\n    return {\r\n        type: LOG_IN,\r\n        data: data\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n\r\n}\r\nexport const signupAction = {\r\n    type: SIGN_UP,\r\n    data: {\r\n\r\n    }\r\n}\r\n\r\n// reducer\r\nconst reducer = (state=initialState, action) => {\r\n    switch( action.type ){\r\n        case LOG_IN: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: dummyUser,\r\n            }\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user:null,\r\n            }\r\n        }\r\n        case SIGN_UP: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}