{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList,\n      hasMoreFollower = _useSelector.hasMoreFollower,\n      hasMoreFollowing = _useSelector.hasMoreFollowing;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var loadMoreFollowings = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  var loadMoreFollowers = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nProfile.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var state;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST\n\n            context.store.dispatch({\n              type: LOAD_FOLLOWERS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_FOLLOWINGS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POSTS_REQUEST,\n              data: state.user.me && state.user.me.id\n            }); // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Profile;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\profile.js"],"names":["React","useCallback","Button","List","Card","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","state","user","followingList","followerList","hasMoreFollower","hasMoreFollowing","post","mainPosts","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SACIC,sBADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,EAIIC,qBAJJ,QAKO,kBALP;AAMA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AADkB,qBAEyDC,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFpE;AAAA,MAEVC,aAFU,gBAEVA,aAFU;AAAA,MAEKC,YAFL,gBAEKA,YAFL;AAAA,MAEmBC,eAFnB,gBAEmBA,eAFnB;AAAA,MAEoCC,gBAFpC,gBAEoCA,gBAFpC;;AAAA,sBAGIf,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACM,IAAV;AAAA,GAAN,CAHf;AAAA,MAGVC,SAHU,iBAGVA,SAHU;;AAKlB,MAAMC,UAAU,GAAGxB,WAAW,CAAC,UAAAyB,MAAM;AAAA,WAAI,YAAM;AAC3CV,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEf,qBADD;AAELgB,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIH,KALoC;AAAA,GAAP,EAK3B,EAL2B,CAA9B;AAOA,MAAMG,gBAAgB,GAAG5B,WAAW,CAAC,UAAAyB,MAAM;AAAA,WAAI,YAAM;AACjDV,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEhB,uBADD;AAELiB,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIH,KAL0C;AAAA,GAAP,EAKjC,EALiC,CAApC;AAOA,MAAMI,kBAAkB,GAAG7B,WAAW,CAAC,YAAM;AACzCe,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEjB,uBADD;AAELqB,MAAAA,MAAM,EAAEZ,aAAa,CAACa;AAFjB,KAAD,CAAR;AAIH,GALqC,EAKnC,CAACb,aAAa,CAACa,MAAf,CALmC,CAAtC;AAOA,MAAMC,iBAAiB,GAAGhC,WAAW,CAAC,YAAM;AACxCe,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAElB,sBADD;AAELsB,MAAAA,MAAM,EAAEX,YAAY,CAACY;AAFhB,KAAD,CAAR;AAIH,GALoC,EAKlC,CAACZ,YAAY,CAACY,MAAd,CALkC,CAArC;AAOA,SACI,mBACI,MAAC,gBAAD,OADJ,EAEI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE,qDAJZ;AAKI,IAAA,QAAQ,EAAEf,gBAAgB,IAAI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAER;AAA3C,6BALlC;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,UAAU,EAAEX,aAPhB;AAQI,IAAA,UAAU,EAAE,oBAAAoB,IAAI;AAAA,aACZ,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAAlB,SACI,MAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAC,MAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,OAAO,EAAEf,UAAU,CAACc,IAAI,CAACE,EAAN;AAAhD,UAAD;AAAf,SACI,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,QADJ,CADJ,CADY;AAAA;AARpB,IAFJ,EAkBI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAER,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE,qDAJZ;AAKI,IAAA,QAAQ,EAAEhB,eAAe,IAAI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEL;AAA3C,6BALjC;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,UAAU,EAAEb,YAPhB;AAQI,IAAA,UAAU,EAAE,oBAAAmB,IAAI;AAAA,aACZ,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAAlB,SACI,MAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAC,MAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,OAAO,EAAEX,gBAAgB,CAACU,IAAI,CAACE,EAAN;AAAtD,UAAD;AAAf,SACI,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,QADJ,CADJ,CADY;AAAA;AARpB,IAlBJ,EAkCI,mBACKlB,SAAS,CAACmB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADY;AAAA,GAAf,CADL,CAlCJ,CADJ;AA0CH,CA3ED;;AA6EA7B,OAAO,CAAC+B,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB9B,YAAAA,KADgB,GACR8B,OAAO,CAACC,KAAR,CAAcC,QAAd,EADQ,EAEtB;;AACAF,YAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACnBW,cAAAA,IAAI,EAAElB,sBADa;AAEnBmB,cAAAA,IAAI,EAAEX,KAAK,CAACC,IAAN,CAAWgC,EAAX,IAAiBjC,KAAK,CAACC,IAAN,CAAWgC,EAAX,CAAcT;AAFlB,aAAvB;AAIAM,YAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACnBW,cAAAA,IAAI,EAAEjB,uBADa;AAEnBkB,cAAAA,IAAI,EAAEX,KAAK,CAACC,IAAN,CAAWgC,EAAX,IAAiBjC,KAAK,CAACC,IAAN,CAAWgC,EAAX,CAAcT;AAFlB,aAAvB;AAIAM,YAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACnBW,cAAAA,IAAI,EAAEd,uBADa;AAEnBe,cAAAA,IAAI,EAAEX,KAAK,CAACC,IAAN,CAAWgC,EAAX,IAAiBjC,KAAK,CAACC,IAAN,CAAWgC,EAAX,CAAcT;AAFlB,aAAvB,EAXsB,CAgBtB;;AAhBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAmBA,eAAe1B,OAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, List, Card, Icon } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport NicknameEditForm from '../containers/NicknameEditForm';\r\nimport {\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../containers/PostCard';\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const { followingList, followerList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    const onUnfollow = useCallback(userId => () => {\r\n        dispatch({\r\n            type: UNFOLLOW_USER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    const onRemoveFollower = useCallback(userId => () => {\r\n        dispatch({\r\n            type: REMOVE_FOLLOWER_REQUEST,\r\n            data: userId,\r\n        });\r\n    }, []);\r\n\r\n    const loadMoreFollowings = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n            offset: followingList.length,\r\n        });\r\n    }, [followingList.length]);\r\n\r\n    const loadMoreFollowers = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n            offset: followerList.length,\r\n        });\r\n    }, [followerList.length]);\r\n\r\n    return (\r\n        <div>\r\n            <NicknameEditForm />\r\n            <List\r\n                style={{ marginBottom: '20px' }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로잉 목록</div>}\r\n                loadMore={hasMoreFollowing && <Button style={{ width: '100%' }} onClick={loadMoreFollowings}>더 보기</Button>}\r\n                bordered\r\n                dataSource={followingList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: '20px' }}>\r\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <List\r\n                style={{ marginBottom: '20px' }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로워 목록</div>}\r\n                loadMore={hasMoreFollower && <Button style={{ width: '100%' }} onClick={loadMoreFollowers}>더 보기</Button>}\r\n                bordered\r\n                dataSource={followerList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: '20px' }}>\r\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <div>\r\n                {mainPosts.map(c => (\r\n                    <PostCard key={+c.createdAt} post={c} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.getInitialProps = async (context) => {\r\n    const state = context.store.getState();\r\n    // 이 직전에 LOAD_USERS_REQUEST\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWERS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWINGS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: state.user.me && state.user.me.id,\r\n    });\r\n\r\n    // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}