{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI(loginData) {\n  // 서버요청 부분\n  // axios처리\n  return axios.post('http://localhost:3065/api/user/login', loginData);\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('http://localhost:3065/api/user/', signUpData);\n}\n\nfunction* login(action) {\n  try {\n    yield call(loginAPI, action.data); //yield delay(2000);\n\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data); // throw new Error('회원가입 에러!!');\n    //yield delay(2000);\n\n    yield put({\n      // put 은 dispatch와 같은 기능\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: 'aaa'\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUP() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUP)]);\n}","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\sagas\\user.js"],"names":["axios","all","fork","takeLatest","call","put","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","loginData","post","signUpAPI","signUpData","login","action","data","type","e","console","error","signUp","watchLogin","watchSignUP","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAuD,oBAAvD;AACA,SACIC,cADJ,EACoBC,cADpB,EACoCC,cADpC,EAEIC,eAFJ,EAEqBC,eAFrB,EAEsCC,eAFtC,EAGIC,eAHJ,EAGqBC,eAHrB,EAGsCC,eAHtC,QAIO,kBAJP;;AAMA,SAASC,QAAT,CAAkBC,SAAlB,EAA4B;AACxB;AACA;AACA,SAAOjB,KAAK,CAACkB,IAAN,CAAW,sCAAX,EAAmDD,SAAnD,CAAP;AACH;;AACD,SAASE,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOpB,KAAK,CAACkB,IAAN,CAAW,iCAAX,EAA8CE,UAA9C,CAAP;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMlB,IAAI,CAACY,QAAD,EAAWM,MAAM,CAACC,IAAlB,CAAV,CADD,CAEC;;AACA,UAAMlB,GAAG,CAAC;AAAM;AACZmB,MAAAA,IAAI,EAAChB;AADC,KAAD,CAAT;AAGH,GAND,CAMC,OAAMiB,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAEf;AADA,KAAD,CAAT;AAGH;AACJ;;AACD,UAAUmB,MAAV,CAAiBN,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAMlB,IAAI,CAACe,SAAD,EAAYG,MAAM,CAACC,IAAnB,CAAV,CADA,CAEA;AACA;;AACA,UAAMlB,GAAG,CAAC;AAAM;AACZmB,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAGH,GAPD,CAOE,OAAOW,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAET,eADA;AAENY,MAAAA,KAAK,EAAE;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,UAAV,GAAsB;AAClB,QAAM1B,UAAU,CAACI,cAAD,EAAiBc,KAAjB,CAAhB;AACH;;AACD,UAAUS,WAAV,GAAwB;AACpB,QAAM3B,UAAU,CAACU,eAAD,EAAkBe,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAM9B,GAAG,CAAC,CACNC,IAAI,CAAC2B,UAAD,CADE,EAEN3B,IAAI,CAAC4B,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, takeLatest, call, put, delay} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(loginData){\r\n    // 서버요청 부분\r\n    // axios처리\r\n    return axios.post('http://localhost:3065/api/user/login', loginData);\r\n}\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('http://localhost:3065/api/user/', signUpData);\r\n}\r\n\r\nfunction* login(action){\r\n    try{\r\n        yield call(loginAPI, action.data);\r\n        //yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type:LOG_IN_SUCCESS\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        });\r\n    }\r\n}\r\nfunction* signUp(action) {\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        // throw new Error('회원가입 에러!!');\r\n        //yield delay(2000);\r\n        yield put({     // put 은 dispatch와 같은 기능\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: 'aaa'\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\nfunction* watchSignUP() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUP),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}