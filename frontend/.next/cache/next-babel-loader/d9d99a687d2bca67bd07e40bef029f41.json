{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SKTelecom\\\\Documents\\\\jwh\\\\myproj\\\\react_proj_study\\\\react_nodebird\\\\frontend\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { signupRequestAction } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router'; // custom hook 만들기 예제(같은 기능을 하는 hook을 합쳐서 custom으로 만들어서 사용)\n// 여기서는 id, nick, password 가 같으므로 custom hook을 사용한다.\n\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n\n  const handler = e => {\n    setter(e.target.value);\n  };\n\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch(); // hooks방식의 state 설정.(id, nick, password는 custom hook을 사용)\n\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false); // password가 틀린경우 에러체크\n\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false); // 약관동의 안한경우 에러체크\n\n  const {\n    isSigningUp\n  } = useSelector(state => state.user);\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  useEffect(() => {\n    if (me) {\n      Router.push('/');\n    }\n  }, [me.id]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch(signupRequestAction({\n      id,\n      password,\n      nick\n    }));\n  }, [password, passwordCheck, term]);\n  const onChangePasswordChk = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-pass\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58 \\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","PropTypes","signupRequestAction","useDispatch","useSelector","Router","useInput","initValue","value","setter","handler","e","target","Signup","dispatch","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","isSigningUp","state","user","id","onChangeId","nick","onChangeNick","password","onChangePassword","me","push","onSubmit","preventDefault","onChangePasswordChk","onChangeTerm","checked","padding","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAS,GAAG,IAAb,KAAsB;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAkBf,QAAQ,CAACa,SAAD,CAAhC;;AACA,QAAMG,OAAO,GAAIC,CAAD,IAAO;AACnBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACH,GAFD;;AAGA,SAAO,CAACA,KAAD,EAAQE,OAAR,CAAP;AACH,CANM;;AAQP,MAAMG,MAAM,GAAG,MAAM;AAEjB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAFiB,CAIjB;;AACA,QAAM;AAAA,OAACY,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACuB,IAAD;AAAA,OAAOC;AAAP,MAAkBxB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACyB,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1B,QAAQ,CAAC,KAAD,CAAlD,CAPiB,CAO2C;;AAC5D,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,CAAC,KAAD,CAA1C,CARiB,CAQ2C;;AAC5D,QAAM;AAAE6B,IAAAA;AAAF,MAAkBnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AAGA,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBrB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACsB,IAAD,EAAOC,YAAP,IAAuBvB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACwB,QAAD,EAAWC,gBAAX,IAA+BzB,QAAQ,CAAC,EAAD,CAA7C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGoC,EAAH,EAAM;AACF3B,MAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,EAIN,CAACD,EAAE,CAACN,EAAJ,CAJM,CAAT;AAMA,QAAMQ,QAAQ,GAAGvC,WAAW,CAAEgB,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACwB,cAAF;;AACA,QAAIL,QAAQ,KAAKf,aAAjB,EAAgC;AAC5B,aAAOK,gBAAgB,CAAC,IAAD,CAAvB;AACH;;AACD,QAAI,CAACH,IAAL,EAAW;AACP,aAAOK,YAAY,CAAC,IAAD,CAAnB;AACH;;AAEDR,IAAAA,QAAQ,CAACZ,mBAAmB,CAAC;AACzBwB,MAAAA,EADyB;AAEzBI,MAAAA,QAFyB;AAGzBF,MAAAA;AAHyB,KAAD,CAApB,CAAR;AAMH,GAf2B,EAezB,CAACE,QAAD,EAAWf,aAAX,EAA0BE,IAA1B,CAfyB,CAA5B;AAiBA,QAAMmB,mBAAmB,GAAGzC,WAAW,CAAEgB,CAAD,IAAO;AAC3CS,IAAAA,gBAAgB,CAACT,CAAC,CAACC,MAAF,CAASJ,KAAT,KAAmBsB,QAApB,CAAhB;AACAd,IAAAA,gBAAgB,CAACL,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAhB;AACH,GAHsC,EAGpC,CAACsB,QAAD,CAHoC,CAAvC;AAKA,QAAMO,YAAY,GAAG1C,WAAW,CAAEgB,CAAD,IAAO;AACpCW,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACP,CAAC,CAACC,MAAF,CAAS0B,OAAV,CAAP;AACH,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,QAAhB;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEb,EAA7B;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,QAAQ,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAEC,IAA/B;AAAqC,IAAA,QAAQ,MAA7C;AAA8C,IAAA,QAAQ,EAAEC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAEC,QAA/B;AAAyC,IAAA,QAAQ,MAAjD;AAAkD,IAAA,QAAQ,EAAEC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAXJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AAA4C,IAAA,KAAK,EAAEhB,aAAnD;AAAkE,IAAA,QAAQ,MAA1E;AAA2E,IAAA,QAAQ,EAAEqB,mBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIKjB,aAAa,IAAI;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAJtB,CAhBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEvB,IAApC;AAA0C,IAAA,QAAQ,EAAEoB,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEKhB,SAAS,IAAI;AAAK,IAAA,KAAK,EAAE;AAACmB,MAAAA,KAAK,EAAC;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAFlB,CAtBJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEjB,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CA1BJ,CADJ,CADJ;AAkCH,CAnFD;;AAqFA,eAAeV,MAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { signupRequestAction } from '../reducers/user';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\n// custom hook 만들기 예제(같은 기능을 하는 hook을 합쳐서 custom으로 만들어서 사용)\r\n// 여기서는 id, nick, password 가 같으므로 custom hook을 사용한다.\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = (e) => {\r\n        setter(e.target.value);\r\n    }\r\n    return [value, handler];\r\n}\r\n\r\nconst Signup = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // hooks방식의 state 설정.(id, nick, password는 custom hook을 사용)\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);  // password가 틀린경우 에러체크\r\n    const [termError, setTermError] = useState(false);          // 약관동의 안한경우 에러체크\r\n    const { isSigningUp } = useSelector(state => state.user);\r\n\r\n    \r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(me){\r\n            Router.push('/');\r\n        }\r\n    }, [me.id]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if( password !== passwordCheck ){\r\n            return setPasswordError(true);\r\n        }\r\n        if( !term ){\r\n            return setTermError(true);\r\n        }\r\n\r\n        dispatch(signupRequestAction({\r\n            id,\r\n            password,\r\n            nick\r\n        }));\r\n\r\n    }, [password, passwordCheck, term]);\r\n\r\n    const onChangePasswordChk = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-pass\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass-chk\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input name=\"user-pass-chk\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\r\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치 해야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>동의합니다.</Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관에 동의 하셔야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}