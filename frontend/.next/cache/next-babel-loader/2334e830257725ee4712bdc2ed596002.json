{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nconst dummyUser = {\n  nickname: 'redsky',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  signedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; // action\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const loginAction = {\n  type: LOG_IN_REQUEST,\n  data: {\n    nickname: 'redsky'\n  }\n};\nexport const logoutAction = {\n  type: LOG_OUT_REQUEST\n}; // 동적인 데이터 처리는 함수로 argument를 받아서 셋팅한다.\n\nexport const signupAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}; // reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          me: dummyUser\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAction","type","data","logoutAction","signupAction","reducer","state","action","signUpData"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,QADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AACJ;AACpBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,WAAW,EAAE,KAHW;AAGA;AACxBC,EAAAA,gBAAgB,EAAE,EAJM;AAIA;AACxBC,EAAAA,QAAQ,EAAE,KALc;AAKJ;AACpBC,EAAAA,WAAW,EAAE,KANW;AAMA;AACxBC,EAAAA,iBAAiB,EAAE,EAPK;AAOA;AACxBC,EAAAA,EAAE,EAAE,IARoB;AAQZ;AACZC,EAAAA,aAAa,EAAE,EATS;AASJ;AACpBC,EAAAA,YAAY,EAAE,EAVU;AAUJ;AACpBC,EAAAA,QAAQ,EAAE,IAXc,CAWJ;;AAXI,CAArB,C,CAcP;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEV,cADiB;AAEvBW,EAAAA,IAAI,EAAE;AACF3B,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAMP,OAAO,MAAM4B,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEP;AADkB,CAArB,C,CAIP;;AACA,OAAO,MAAMU,YAAY,GAAIF,IAAD,IAAU;AAClC,SAAO;AACHD,IAAAA,IAAI,EAAEJ,eADH;AAEHK,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM,C,CAOP;;AACA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAC3B,YAAP,EAAqB4B,MAArB,KAAgC;AAC5C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKV,cAAL;AAAqB;AACjB,iCACOe,KADP;AAEI1B,UAAAA,UAAU,EAAE,IAFhB;AAGIO,UAAAA,EAAE,EAAEb;AAHR;AAKH;;AACD,SAAKkB,cAAL;AAAqB;AACjB,iCACOc,KADP;AAEI1B,UAAAA,UAAU,EAAE;AAFhB;AAIH;;AACD,SAAKa,cAAL;AAAqB;AACjB,iCACOa,KADP;AAEI1B,UAAAA,UAAU,EAAE,KAFhB;AAGIO,UAAAA,EAAE,EAAE;AAHR;AAKH;;AACD,SAAKO,eAAL;AAAsB;AAClB,iCACOY,KADP;AAEI1B,UAAAA,UAAU,EAAE,KAFhB;AAGIO,UAAAA,EAAE,EAAC;AAHP;AAKH;;AACD,SAAKU,eAAL;AAAsB;AAClB,iCACOS,KADP;AAEIE,UAAAA,UAAU,EAAED,MAAM,CAACL;AAFvB;AAIH;;AACD;AAAS;AACL,iCACOI,KADP;AAGH;AAtCL;AAwCH,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname: 'redsky',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,  // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false,     // 로그인 시도중\r\n    logInErrorReason: '',   // 로그인 실패 사유\r\n    signedUp: false,    // 회원가입 성공\r\n    isSigningUp: false,     // 회원가입 시도중\r\n    signUpErrorReason: '',  // 회원가입 실패 사유\r\n    me: null,   // 내 정보\r\n    followingList: [],  // 팔로잉 리스트\r\n    followerList: [],   // 팔로워 리스트\r\n    userInfo: null,     // 남의 정보\r\n};\r\n\r\n// action\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN_REQUEST,\r\n    data: {\r\n        nickname: 'redsky',\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST,\r\n\r\n}\r\n// 동적인 데이터 처리는 함수로 argument를 받아서 셋팅한다.\r\nexport const signupAction = (data) => {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        data: data\r\n    }\r\n}\r\n\r\n// reducer\r\nconst reducer = (state=initialState, action) => {\r\n    switch( action.type ){\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                me: dummyUser,\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me: null,\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me:null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}