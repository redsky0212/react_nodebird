{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar dummyUser = {\n  nickname: 'redsky',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nexport var initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: null\n}; // action\n\nexport var LOG_IN = 'LOG_IN';\nexport var LOG_OUT = 'LOG_OUT';\nexport var SIGN_UP = 'SIGN_UP';\nexport var loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'redsky'\n  }\n};\nexport var logoutAction = {\n  type: LOG_OUT\n}; // 동적인 데이터 처리는 함수로 argument를 받아서 셋팅한다.\n\nexport var signupAction = function signupAction(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n}; // reducer\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","signUpData","LOG_IN","LOG_OUT","SIGN_UP","loginAction","type","data","logoutAction","signupAction","reducer","state","action"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,QADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE,IAFkB;AAGxBC,EAAAA,UAAU,EAAE;AAHY,CAArB,C,CAMP;;AACA,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEJ,MADiB;AAEvBK,EAAAA,IAAI,EAAE;AACFb,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAMP,OAAO,IAAMc,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEH;AADkB,CAArB,C,CAIP;;AACA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AAClC,SAAO;AACHD,IAAAA,IAAI,EAAEF,OADH;AAEHG,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM,C,CAOP;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAC5C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKJ,MAAL;AAAa;AACT,iCACOS,KADP;AAEIZ,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAEP;AAHV;AAKH;;AACD,SAAKU,OAAL;AAAc;AACV,iCACOQ,KADP;AAEIZ,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAC;AAHT;AAKH;;AACD,SAAKI,OAAL;AAAc;AACV,iCACOO,KADP;AAEIV,UAAAA,UAAU,EAAEW,MAAM,CAACL;AAFvB;AAIH;;AACD;AAAS;AACL,iCACOI,KADP;AAGH;AAzBL;AA2BH,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname: 'redsky',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: null,\r\n};\r\n\r\n// action\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const SIGN_UP = 'SIGN_UP';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n    data: {\r\n        nickname: 'redsky',\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n\r\n}\r\n// 동적인 데이터 처리는 함수로 argument를 받아서 셋팅한다.\r\nexport const signupAction = (data) => {\r\n    return {\r\n        type: SIGN_UP,\r\n        data: data\r\n    }\r\n}\r\n\r\n// reducer\r\nconst reducer = (state=initialState, action) => {\r\n    switch( action.type ){\r\n        case LOG_IN: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: dummyUser,\r\n            }\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user:null,\r\n            }\r\n        }\r\n        case SIGN_UP: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}