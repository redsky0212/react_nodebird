{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SKTelecom\\\\Documents\\\\jwh\\\\myproj\\\\react_proj_study\\\\react_nodebird\\\\frontend\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Icon, Button, Avatar, Form, List, Input, Comment } from 'antd';\nimport PropsTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport post, { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst PostCard = ({\n  v\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n\n    if (!me) {\n      return alert('로그인이 필요합니다!');\n    }\n\n    return dispatch({\n      type: ADD_COMMENT_REQUEST\n    });\n  }, []);\n  const onToggleComment = useCallback(e => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onChangeCommentText = useCallback(e => {\n    e.preventDefault();\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Card, {\n    cover: v.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: v.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, v.User.nickname[0]),\n    title: v.User.nickname,\n    description: v.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: `${v.Comments ? v.Comments.length : 0} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: v.Comments || [],\n    renderItem: item => __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, item.User.nickname[0]),\n      content: item.content,\n      datetime: item.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nPostCard.propsTypes = {\n  v: PropsTypes.shape({\n    User: PropsTypes.object,\n    content: PropsTypes.string,\n    img: PropsTypes.string,\n    createdAt: PropsTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\components\\PostCard.js"],"names":["React","useState","useCallback","Card","Icon","Button","Avatar","Form","List","Input","Comment","PropsTypes","useSelector","useDispatch","post","ADD_COMMENT_REQUEST","PostCard","v","commentFormOpened","setCommentFormOpened","commentText","setCommentText","me","state","user","dispatch","onSubmitComment","e","preventDefault","alert","type","onToggleComment","prev","onChangeCommentText","target","value","img","User","nickname","content","Comments","length","item","createdAt","propsTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport {Card, Icon, Button, Avatar, Form, List, Input, Comment} from 'antd';\r\nimport PropsTypes from 'prop-types';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport post, { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst PostCard = ({v}) => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText, setCommentText] = useState('');\r\n    const {me} = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(!me){\r\n            return alert('로그인이 필요합니다!');\r\n        }\r\n        return dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n\r\n        });\r\n    },[]);\r\n\r\n    const onToggleComment = useCallback((e) => {\r\n        setCommentFormOpened(prev => !prev);\r\n    }, []);\r\n\r\n    const onChangeCommentText = useCallback((e) => {\r\n        e.preventDefault();\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n        <Card\r\n            cover={v.img && <img alt=\"example\" src={v.img} />}\r\n            actions={[\r\n                <Icon type=\"retweet\" key=\"retweet\" />,\r\n                <Icon type=\"heart\" key=\"heart\" />,\r\n                <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\r\n                <Icon type=\"ellipsis\" key=\"ellipsis\" />,\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{v.User.nickname[0]}</Avatar>}\r\n                title={v.User.nickname}\r\n                description={v.content}\r\n            />\r\n        </Card>\r\n        {commentFormOpened && (\r\n            <>\r\n                <Form onSubmit={onSubmitComment}>\r\n                    <Form.Item>\r\n                        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                    </Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n                </Form>\r\n                <List\r\n                    header={`${v.Comments ? v.Comments.length : 0} 댓글`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={v.Comments || []}\r\n                    renderItem={item => (\r\n                        <li>\r\n                            <Comment \r\n                                author={item.User.nickname} \r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content={item.content}\r\n                                datetime={item.createdAt} />\r\n                        </li>\r\n                    )}\r\n                >\r\n                </List>\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nPostCard.propsTypes = {\r\n    v: PropsTypes.shape({\r\n        User: PropsTypes.object,\r\n        content: PropsTypes.string,\r\n        img: PropsTypes.string,\r\n        createdAt: PropsTypes.object\r\n    })\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}