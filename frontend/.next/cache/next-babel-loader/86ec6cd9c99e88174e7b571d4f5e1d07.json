{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SKTelecom\\\\Documents\\\\jwh\\\\myproj\\\\react_proj_study\\\\react_nodebird\\\\frontend\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\n\nvar Signup = function Signup() {\n  // hooks방식의 state 설정.\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      nick = _useState2[0],\n      setNick = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      passwordCheck = _useState4[0],\n      setPasswordCheck = _useState4[1];\n\n  var _useState5 = useState(false),\n      term = _useState5[0],\n      setTerm = _useState5[1];\n\n  var _useState6 = useState(false),\n      passwordError = _useState6[0],\n      setPasswordError = _useState6[1]; // password가 틀린경우 에러체크\n\n\n  var _useState7 = useState(false),\n      termError = _useState7[0],\n      setTermError = _useState7[1]; // 약관동의 안한경우 에러체크\n\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordCheck: passwordCheck,\n      term: term\n    });\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  };\n\n  var onChangeId = function onChangeId(e) {\n    setId(e.target.value);\n  };\n\n  var onChangeNick = function onChangeNick(e) {\n    setNick(e.target.value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var onChangePasswordChk = function onChangePasswordChk(e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  };\n\n  var onChangeTerm = function onChangeTerm(e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }; // custom hook 만들기 예제\n  // const useInput = (initValue = null) => {\n  //     const [value, setter] = useState(initValue);\n  //     const handler = (e) => {\n  //         setter(e.target.value);\n  //     }\n  //     return [value, handler];\n  // }\n  // const [id, onChangeId] = useInput('');\n\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-pass\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58 \\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\signup.js"],"names":["React","useState","AppLayout","Head","Form","Input","Checkbox","Button","Signup","id","setId","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","e","preventDefault","console","log","onChangeId","target","value","onChangeNick","onChangePassword","onChangePasswordChk","onChangeTerm","checked","padding","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport Head from 'next/head';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\n\r\nconst Signup = () => {\r\n    // hooks방식의 state 설정.\r\n    const [id, setId] = useState('');\r\n    const [nick, setNick] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);  // password가 틀린경우 에러체크\r\n    const [termError, setTermError] = useState(false);          // 약관동의 안한경우 에러체크\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log({id, nick, password, passwordCheck, term});\r\n\r\n        if( password !== passwordCheck ){\r\n            return setPasswordError(true);\r\n        }\r\n        if( !term ){\r\n            return setTermError(true);\r\n        }\r\n    };\r\n\r\n    const onChangeId = (e) => {\r\n        setId(e.target.value);\r\n    };\r\n\r\n    const onChangeNick = (e) => {\r\n        setNick(e.target.value);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const onChangePasswordChk = (e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    };\r\n\r\n    const onChangeTerm = (e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    };\r\n\r\n    // custom hook 만들기 예제\r\n    // const useInput = (initValue = null) => {\r\n    //     const [value, setter] = useState(initValue);\r\n    //     const handler = (e) => {\r\n    //         setter(e.target.value);\r\n    //     }\r\n    //     return [value, handler];\r\n    // }\r\n    // const [id, onChangeId] = useInput('');\r\n\r\n    return (\r\n        <>\r\n        <Head>\r\n            <title>노드버드</title>\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\" />\r\n        </Head>\r\n        <AppLayout>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-pass\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass-chk\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input name=\"user-pass-chk\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\r\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치 해야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>동의합니다.</Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관에 동의 하셔야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </AppLayout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}