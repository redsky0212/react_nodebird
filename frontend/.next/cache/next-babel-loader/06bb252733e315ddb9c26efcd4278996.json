{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport reducer from '../reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\n\nNodeBird.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(context);\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return Component.getInitialProps(ctx);\n\n          case 6:\n            pageProps = _context.sent;\n\n          case 7:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRedux(function (initialState, options) {\n  // 사가 미들웨어 추가\n  var sagaMiddleware = createSagaMiddleware(); // 커스터마이징 코드 추가\n\n  var middlewares = [sagaMiddleware];\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n})(NodeBird);","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\_app.js"],"names":["React","Head","AppLayout","PropTypes","withRedux","Provider","reducer","createStore","compose","applyMiddleware","createSagaMiddleware","rootSaga","NodeBird","Component","store","pageProps","propTypes","elementType","object","getInitialProps","context","console","log","ctx","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAClD,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED;AAAjB,KACI,MAAC,IAAD,QACI,gDADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC;AAA5B,IAFJ,CADJ,EAKI,MAAC,SAAD,QACI,MAAC,SAAD,EAAeC,SAAf,CADJ,CALJ,CADJ;AAWH,CAZD;;AAcAH,QAAQ,CAACI,SAAT,GAAqB;AACjBH,EAAAA,SAAS,EAAEV,SAAS,CAACc,WADJ;AAEjBH,EAAAA,KAAK,EAAEX,SAAS,CAACe;AAFA,CAArB;;AAKAN,QAAQ,CAACO,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACQG,YAAAA,GAFe,GAEIH,OAFJ,CAEfG,GAFe,EAEVV,SAFU,GAEIO,OAFJ,CAEVP,SAFU;AAGnBE,YAAAA,SAHmB,GAGP,EAHO;;AAAA,iBAInBF,SAAS,CAACM,eAJS;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKDN,SAAS,CAACM,eAAV,CAA0BI,GAA1B,CALC;;AAAA;AAKnBR,YAAAA,SALmB;;AAAA;AAAA,6CAOhB;AAAEA,cAAAA,SAAS,EAATA;AAAF,aAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeX,SAAS,CAAC,UAACoB,YAAD,EAAeC,OAAf,EAAyB;AAC9C;AACA,MAAMC,cAAc,GAAGhB,oBAAoB,EAA3C,CAF8C,CAI9C;;AACA,MAAMiB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACbvB,OAAO,CAACC,eAAe,MAAf,SAAmBkB,WAAnB,CAAD,CADM,GAEZnB,OAAO,CACRC,eAAe,MAAf,SAAmBkB,WAAnB,CADQ,EAER,CAACF,OAAO,CAACO,QAAT,IAAqBC,MAAM,CAACC,4BAAP,KAAwC,WAA7D,GAA2ED,MAAM,CAACC,4BAAP,EAA3E,GAAmH,UAACC,CAAD;AAAA,WAAKA,CAAL;AAAA,GAF3G,CAFZ;AAMA,MAAMrB,KAAK,GAAGP,WAAW,CAACD,OAAD,EAAUkB,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBzB,QAAnB;AACA,SAAOG,KAAP;AACH,CAfuB,CAAT,CAeZF,QAfY,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from '../reducers';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>노드버드</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\" />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType,\r\n    store: PropTypes.object,\r\n};\r\n\r\nNodeBird.getInitialProps = async (context) => {\r\n    console.log(context);\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n        pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    return { pageProps };\r\n};\r\n\r\nexport default withRedux((initialState, options)=>{\r\n    // 사가 미들웨어 추가\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    // 커스터마이징 코드 추가\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'?\r\n        compose(applyMiddleware(...middlewares))\r\n        :compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f)=>f,\r\n    );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n})(NodeBird);"]},"metadata":{},"sourceType":"module"}