{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SKTelecom\\\\Documents\\\\jwh\\\\myproj\\\\react_proj_study\\\\react_nodebird\\\\frontend\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  const onChangeText = useCallback(e => {\n    e.preventDefault();\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC77C\\uC5B4\\uB0A0\\uAE4C\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\components\\PostForm.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [text, setText] = useState('');\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state=>state.post);\r\n\r\n\r\n    useEffect(() => {\r\n        setText('');\r\n    }, [postAdded === true]);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: { text },\r\n        });\r\n    }, []);\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        e.preventDefault();\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n            <Input.TextArea \r\n                maxLength={140} \r\n                placeholder=\"어떤 신기한 일이 일어날까요?\"\r\n                value={text}\r\n                onChange={onChangeText} />\r\n            <div>\r\n                <input type=\"file\" multiple hidden />\r\n                <Button>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {\r\n                    imagePaths.map((v, i) => {\r\n                        return (\r\n                            <div key={v} style={{ display: 'inline-block' }}>\r\n                                <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                                <div>\r\n                                    <Button>제거</Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}