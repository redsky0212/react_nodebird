{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport reducer from '../reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst NodeBird = ({\n  Component,\n  store\n}) => {\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, null)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\nexport default withRedux((initialState, options) => {\n  // 사가 미들웨어 추가\n  const sagaMiddleware = createSagaMiddleware(); // 커스터마이징 코드 추가\n\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n})(NodeBird);","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\_app.js"],"names":["React","Head","AppLayout","PropTypes","withRedux","Provider","reducer","createStore","compose","applyMiddleware","createSagaMiddleware","rootSaga","NodeBird","Component","store","propTypes","elementType","object","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACI,MAAC,IAAD,QACI,gDADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC;AAA5B,IAFJ,CADJ,EAKI,MAAC,SAAD,QACI,MAAC,SAAD,OADJ,CALJ,CADJ;AAWH,CAZD;;AAcAF,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAEV,SAAS,CAACa,WADJ;AAEjBF,EAAAA,KAAK,EAAEX,SAAS,CAACc;AAFA,CAArB;AAKA,eAAeb,SAAS,CAAC,CAACc,YAAD,EAAeC,OAAf,KAAyB;AAC9C;AACA,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C,CAF8C,CAI9C;;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACbjB,OAAO,CAACC,eAAe,CAAC,GAAGY,WAAJ,CAAhB,CADM,GAEZb,OAAO,CACRC,eAAe,CAAC,GAAGY,WAAJ,CADP,EAER,CAACF,OAAO,CAACO,QAAT,IAAqBC,MAAM,CAACC,4BAAP,KAAwC,WAA7D,GAA2ED,MAAM,CAACC,4BAAP,EAA3E,GAAoHC,CAAD,IAAKA,CAFhH,CAFZ;AAMA,QAAMf,KAAK,GAAGP,WAAW,CAACD,OAAD,EAAUY,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBnB,QAAnB;AACA,SAAOG,KAAP;AACH,CAfuB,CAAT,CAeZF,QAfY,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from '../reducers';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>노드버드</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.5/antd.min.css\" />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType,\r\n    store: PropTypes.object,\r\n};\r\n\r\nexport default withRedux((initialState, options)=>{\r\n    // 사가 미들웨어 추가\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    // 커스터마이징 코드 추가\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'?\r\n        compose(applyMiddleware(...middlewares))\r\n        :compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f)=>f,\r\n    );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n})(NodeBird);"]},"metadata":{},"sourceType":"module"}