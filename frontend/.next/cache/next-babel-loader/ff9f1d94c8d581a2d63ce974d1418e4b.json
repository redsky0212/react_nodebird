{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { signupRequestAction } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router'; // custom hook 만들기 예제(같은 기능을 하는 hook을 합쳐서 custom으로 만들어서 사용)\n// 여기서는 id, nick, password 가 같으므로 custom hook을 사용한다.\n\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = function handler(e) {\n    setter(e.target.value);\n  };\n\n  return [value, handler];\n};\n\nvar Signup = function Signup() {\n  var dispatch = useDispatch(); // hooks방식의 state 설정.(id, nick, password는 custom hook을 사용)\n\n  var _useState2 = useState(''),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1]; // password가 틀린경우 에러체크\n\n\n  var _useState5 = useState(false),\n      termError = _useState5[0],\n      setTermError = _useState5[1]; // 약관동의 안한경우 에러체크\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  useEffect(function () {\n    if (me) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch(signupRequestAction({\n      userId: id,\n      password: password,\n      nickname: nick\n    }));\n  }, [id, nick, password, passwordCheck, term]);\n  var onChangePasswordChk = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordChk\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58 \\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:\\Users\\SKTelecom\\Documents\\jwh\\myproj\\react_proj_study\\react_nodebird\\frontend\\pages\\signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","PropTypes","signupRequestAction","useDispatch","useSelector","Router","useInput","initValue","value","setter","handler","e","target","Signup","dispatch","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","state","user","isSigningUp","me","id","onChangeId","nick","onChangeNick","password","onChangePassword","push","onSubmit","preventDefault","userId","nickname","onChangePasswordChk","onChangeTerm","checked","padding","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { signupRequestAction } from '../reducers/user';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\n// custom hook 만들기 예제(같은 기능을 하는 hook을 합쳐서 custom으로 만들어서 사용)\r\n// 여기서는 id, nick, password 가 같으므로 custom hook을 사용한다.\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = (e) => {\r\n        setter(e.target.value);\r\n    }\r\n    return [value, handler];\r\n}\r\n\r\nconst Signup = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // hooks방식의 state 설정.(id, nick, password는 custom hook을 사용)\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);  // password가 틀린경우 에러체크\r\n    const [termError, setTermError] = useState(false);          // 약관동의 안한경우 에러체크\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    \r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(me){\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if( password !== passwordCheck ){\r\n            return setPasswordError(true);\r\n        }\r\n        if( !term ){\r\n            return setTermError(true);\r\n        }\r\n\r\n        dispatch(signupRequestAction({\r\n            userId: id,\r\n            password,\r\n            nickname: nick\r\n        }));\r\n\r\n    }, [id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordChk = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-pass\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-pass-chk\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input name=\"user-pass-chk\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\r\n                    {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치 해야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>동의합니다.</Checkbox>\r\n                    {termError && <div style={{color:'red'}}>약관에 동의 하셔야 합니다.</div>}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}